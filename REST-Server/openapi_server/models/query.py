# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Query(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_type=None, result_type=None):  # noqa: E501
        """Query - a model defined in OpenAPI

        :param query_type: The query_type of this Query.  # noqa: E501
        :type query_type: str
        :param result_type: The result_type of this Query.  # noqa: E501
        :type result_type: str
        """
        self.openapi_types = {
            'query_type': str,
            'result_type': str
        }

        self.attribute_map = {
            'query_type': 'query_type',
            'result_type': 'result_type'
        }

        self._query_type = query_type
        self._result_type = result_type

    @classmethod
    def from_dict(cls, dikt) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Query of this Query.  # noqa: E501
        :rtype: Query
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_type(self):
        """Gets the query_type of this Query.

        Is this a geo, time or text query?  # noqa: E501

        :return: The query_type of this Query.
        :rtype: str
        """
        return self._query_type

    @query_type.setter
    def query_type(self, query_type):
        """Sets the query_type of this Query.

        Is this a geo, time or text query?  # noqa: E501

        :param query_type: The query_type of this Query.
        :type query_type: str
        """
        allowed_values = ["geo", "time", "text"]  # noqa: E501
        if query_type not in allowed_values:
            raise ValueError(
                "Invalid value for `query_type` ({0}), must be one of {1}"
                .format(query_type, allowed_values)
            )

        self._query_type = query_type

    @property
    def result_type(self):
        """Gets the result_type of this Query.

        Should the query return models, datasets, or variables?  # noqa: E501

        :return: The result_type of this Query.
        :rtype: str
        """
        return self._result_type

    @result_type.setter
    def result_type(self, result_type):
        """Sets the result_type of this Query.

        Should the query return models, datasets, or variables?  # noqa: E501

        :param result_type: The result_type of this Query.
        :type result_type: str
        """
        allowed_values = ["models", "datasets", "variables"]  # noqa: E501
        if result_type not in allowed_values:
            raise ValueError(
                "Invalid value for `result_type` ({0}), must be one of {1}"
                .format(result_type, allowed_values)
            )

        self._result_type = result_type
